use super::Syntax;
use std::collections::HashSet;

impl Syntax {
    pub fn sql() -> Self {
        Syntax {
            language: "SQL",
            case_sensitive: false,
            comment: "--",
            keywords: HashSet::from([
                "ADD",
                "ALL",
                "ALTER",
                "AND",
                "ANY",
                "AS",
                "ASC",
                "BACKUP",
                "BETWEEN",
                "CASE",
                "CHECK",
                "COLUMN",
                "CONSTRAINT",
                "CREATE",
                "INDEX",
                "OR",
                "REPLACE",
                "VIEW",
                "PROCEDURE",
                "UNIQUE",
                "DEFAULT",
                "DELETE",
                "DESC",
                "DISTINCT",
                "DROP",
                "PRIMARY",
                "FOREIGN",
                "EXEC",
                "EXISTS",
                "FROM",
                "FULL",
                "OUTER",
                "JOIN",
                "GROUP",
                "BY",
                "HAVING",
                "IN",
                "INNER",
                "INSERT",
                "INTO",
                "SELECT",
                "IS",
                "KEY",
                "NOT",
                "NULL",
                "LEFT",
                "LIKE",
                "LIMIT",
                "ORDER",
                "A",
                "RIGHT",
                "ROWNUM",
                "TOP",
                "TRUNCATE",
                "UNION",
                "UPDATE",
                "VALUES",
                "WHERE",
                "WITH",
            ]),
            types: HashSet::from([
                "BOOL",
                "INTEGER",
                "SMALLINT",
                "BIGINT",
                "REAL",
                "DOUBLEPRECISION",
                "NUMERIC",
                "VARCHAR",
                "CHAR",
                "TEXT",
                "DATE",
                "TIMESTAMP",
                "UUID",
                "BYTEA",
                "LOB",
                "XML",
                "BIGINT",
                "NUMERIC",
                "BIT",
                "SMALLINT",
                "DECIMAL",
                "SMALLMONEY",
                "INT",
                "TINYINT",
                "MONEY",
                "FLOAT",
                "REAL",
                "DATE",
                "DATETIMEOFFSET",
                "DATETIME2",
                "SMALLDATETIME",
                "DATETIME",
                "TIME",
                "CHAR",
                "VARCHAR",
                "TEXT",
                "NCHAR",
                "NVARCHAR",
                "NTEXT",
                "BINARY",
                "VARBINARY",
                "IMAGE",
                "ROWVERSION",
                "HIERARCHYID",
                "UNIQUEIDENTIFIER",
                "SQL_VARIANT",
                "XML",
                "TABLE",
                "SET",
                "DATABASE",
            ]),
        }
    }
}
